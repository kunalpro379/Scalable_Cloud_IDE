---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-deployment
  namespace: cloud-editor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: runner
  template:
    metadata:
      labels:
        app: runner
    spec:
      containers:
      - name: runner
        image: localhost:5000/cloud-editor-runner:latest  # For local registry
        # OR
        # image: cloud-editor-runner:latest  # For minikube
        imagePullPolicy: Never  # Important for local images
        ports:
        - containerPort: 3001
        env:
        - name: AKIAYS2NUNY5BMFW4AQV
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: access-key
        - name: LNTA+O9w9mEA260NcKsoMsC6PtzGvg7aLnvREA7n
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-key
        - name: S3_ENDPOINT
          value: "https://s3.ap-south-1.amazonaws.com"
        - name: S3_BUCKET
          value: "cloud-ide-kunal"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestration-deployment
  namespace: cloud-editor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orchestration
  template:
    metadata:
      labels:
        app: orchestration
    spec:
      containers:
      - name: orchestration
        image: localhost:5000/cloud-editor-orchestration:latest  # For local registry
        # OR
        # image: cloud-editor-orchestration:latest  # For minikube
        imagePullPolicy: Never
        ports:
        - containerPort: 3002
        env:
        - name: AKIAYS2NUNY5BMFW4AQV
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: access-key
        - name: LNTA+O9w9mEA260NcKsoMsC6PtzGvg7aLnvREA7n
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-key
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: initialization-deployment
  namespace: cloud-editor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: initialization
  template:
    metadata:
      labels:
        app: initialization
    spec:
      containers:
      - name: initialization
        image: localhost:5000/cloud-editor-initialization:latest  # For local registry
        # OR
        # image: cloud-editor-initialization:latest  # For minikube
        imagePullPolicy: Never
        ports:
        - containerPort: 3003
        env:
        - name: AKIAYS2NUNY5BMFW4AQV
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: access-key
        - name: LNTA+O9w9mEA260NcKsoMsC6PtzGvg7aLnvREA7n
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-key
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3003
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: runner-service
  namespace: cloud-editor
spec:
  type: NodePort  # Changed to NodePort for local access
  selector:
    app: runner
  ports:
  - port: 80
    targetPort: 3001
    nodePort: 30001  # Added nodePort for local access
---
apiVersion: v1
kind: Service
metadata:
  name: orchestration-service
  namespace: cloud-editor
spec:
  type: NodePort  # Changed to NodePort for local access
  selector:
    app: orchestration
  ports:
  - port: 80
    targetPort: 3002
    nodePort: 30002  # Added nodePort for local access
---
apiVersion: v1
kind: Service
metadata:
  name: initialization-service
  namespace: cloud-editor
spec:
  type: NodePort  # Changed to NodePort for local access
  selector:
    app: initialization
  ports:
  - port: 80
    targetPort: 3003
    nodePort: 30003  # Added nodePort for local access
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloud-editor-ingress
  namespace: cloud-editor
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - http:
      paths:
      - path: /runner/?(.*)
        pathType: Prefix
        backend:
          service:
            name: runner-service
            port:
              number: 80
      - path: /orchestration/?(.*)
        pathType: Prefix
        backend:
          service:
            name: orchestration-service
            port:
              number: 80
      - path: /init/?(.*)
        pathType: Prefix
        backend:
          service:
            name: initialization-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-hpa
  namespace: cloud-editor
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: orchestration-hpa
  namespace: cloud-editor
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: orchestration-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: initialization-hpa
  namespace: cloud-editor
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: initialization-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
